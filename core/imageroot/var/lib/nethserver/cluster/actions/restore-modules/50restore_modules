#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import sys
import os
import agent.tasks
import json
import tempfile

errors = 0
request = json.load(sys.stdin)
start_progress = 1
num_modules = len(request)
module_progress = int(100 / num_modules)
agent.set_progress(start_progress)

# source
for module in request:
    data = module
    data.setdefault('snapshot', '')
    data.setdefault('node', 1)
    end_progress = start_progress + module_progress
    task = agent.tasks.run(agent_id = 'cluster', action = 'restore-module', data = data,  endpoint = "redis://cluster-leader",
    progress_callback=agent.get_progress_callback(start_progress, end_progress))
    errors = errors + task['exit_code']
    start_progress = end_progress + 1

if errors > 0:
    json.dumps(errors)
    sys.exit(10+errors)
