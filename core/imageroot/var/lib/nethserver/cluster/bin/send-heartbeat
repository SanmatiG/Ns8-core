#!/bin/bash

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

set -e

period="${1:-0}"

export REDIS_USER="default"
export REDIS_PASSWORD="default"
export REDIS_ADDRESS="127.0.0.1:6379"

# Parse subscription configuration from Redis
while IFS='=' read -r key value; do
    declare "${key}"="${value}"
done < <(redis-hgetall cluster/subscription)

function exit_error ()
{
    echo "<7>[ERROR]" "${@}" 1>&2
    exit 1
}

function send_heartbeat_nsent ()
{
    jq -n -c --arg system_id "${system_id:?}" '{"lk":$system_id}' | \
    curl -m 180 --retry 3 -L -s \
        --header "Accept: application/json"  \
        --header "Authorization: token ${auth_token:?}"  \
        --header "Content-Type: application/json" \
        --data @- \
        "https://my.nethesis.it/isa/heartbeats/store" >/dev/null || :
}

function send_heartbeat_nscom ()
{
    jq -n -c --arg system_id "${system_id:?}" '{"lk":$system_id}' | \
    curl -m 180 --retry 3 -L -s \
        --header "Accept: application/json"  \
        --header "Authorization: token ${auth_token:?}"  \
        --header "Content-Type: application/json" \
        --data @- \
        "${dartagnan_url:?}/machine/heartbeats/store" >/dev/null || :
}

sendfunc="send_heartbeat_${provider}"
if [[ $(type -t "${sendfunc}") != function ]]; then
    echo "<4>[WARNING] Invalid provider, ignored: ${provider:-None}" 1>&2
    exit 0
fi

${sendfunc}

if [[ "${period}" == 0 ]]; then
    exit 0 # exit immediately if period parameter is not given
fi

trap 'kill -TERM -- -${BASHPID}' INT
while true; do
    if (( period > 60 )); then
        # approximate period to 5% tolerance
        sleep $(( period + RANDOM % (period / 10) - (period / 20) ))
    else
        sleep "${period}"
    fi
    ${sendfunc}
done
